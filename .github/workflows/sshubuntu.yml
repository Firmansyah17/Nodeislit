name: SSH Ubuntu Runner (Tailscale + Node.js)

on:
  workflow_dispatch:
    inputs:
      keep_minutes:
        description: "Berapa menit runner tetap hidup"
        required: false
        default: "180"

jobs:
  ssh-linux:
    runs-on: ubuntu-latest

    steps:
      # 1) Buat user 'dev' + password acak (tanpa broken pipe)
      - name: Create user 'dev' with random password
        shell: bash
        run: |
          set -e
          PASS=$(openssl rand -base64 32 | tr -dc 'A-Za-z0-9!@#$%^&*()-_=+' | head -c 20)
          sudo useradd -m -s /bin/bash dev || true
          echo "dev:${PASS}" | sudo chpasswd
          sudo usermod -aG sudo dev
          echo "SSH_USER=dev" >> $GITHUB_ENV
          echo "SSH_PASS=${PASS}" >> $GITHUB_ENV

      # 2) OpenSSH server
      - name: Install & start OpenSSH Server
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y openssh-server
          sudo systemctl enable ssh
          sudo systemctl restart ssh

      # 3) Tailscale join (pakai auth key dari repo secret)
      - name: Install Tailscale & connect
        shell: bash
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} \
                            --hostname=ssh-linux-${{ github.run_id }}
          TS_IPv4=$(tailscale ip -4 | head -n1)
          echo "TS_IP=${TS_IPv4}" >> $GITHUB_ENV

      # 4) Node.js LTS + pm2
      - name: Install Node.js LTS + pm2
        shell: bash
        run: |
          set -e
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo npm i -g pm2
          node -v && npm -v && pm2 -v

      # 5) Sample app (izin file FIX) + jalan via pm2 sebagai user dev
      - name: Create sample Node app and run with pm2
        shell: bash
        run: |
          set -e
          # pastikan home & izin
          sudo install -d -m 755 -o dev -g dev /home/dev
          # tulis file dengan sudo tee agar tidak permission denied
          sudo tee /home/dev/server.js > /dev/null <<'JS'
          const http = require('http');
          const port = process.env.PORT || 3000;
          const server = http.createServer((req,res)=>{
            res.writeHead(200, {'Content-Type':'text/plain'});
            res.end('Hello from Tailscale Ubuntu runner!\n');
          });
          server.listen(port, ()=> console.log('listening on', port));
          JS
          sudo chown dev:dev /home/dev/server.js
          # jalankan pm2 sbg user dev (pakai login shell biar PATH rapi)
          sudo -u dev -H bash -lc 'pm2 start /home/dev/server.js --name demo && pm2 save'

      # 6) Info koneksi
      - name: Show SSH / HTTP info
        shell: bash
        run: |
          echo "===== SSH CREDENTIALS ====="
          echo "Tailscale IP : $TS_IP"
          echo "User         : $SSH_USER"
          echo "Pass         : $SSH_PASS"
          echo ""
          echo "Dari WSL/terminal:"
          echo "ssh ${SSH_USER}@${TS_IP}"
          echo ""
          echo "Tes HTTP sample app:"
          echo "curl http://${TS_IP}:3000"

      # 7) Keep alive biar sempat dipakai (default 180 menit)
      - name: Keep session alive
        shell: bash
        run: |
          MINS="${{ github.event.inputs.keep_minutes }}"
          [[ -z "$MINS" ]] && MINS=180
          SECS=$((MINS*60))
          echo "Keeping runner alive for ${MINS} minutes..."
          sleep "${SECS}"
